"""tb_filmes

Revision ID: cd75cfc5ea2c
Revises: 
Create Date: 2025-08-26 01:31:58.989719

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cd75cfc5ea2c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filmes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(), nullable=True),
    sa.Column('genero', sa.String(), nullable=True),
    sa.Column('ano', sa.Integer(), nullable=True),
    sa.Column('preco_aluguel', sa.Float(), nullable=True),
    sa.Column('total_copias', sa.Integer(), nullable=True),
    sa.Column('copias_disponiveis', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filmes_id'), 'filmes', ['id'], unique=False)
    op.create_index(op.f('ix_filmes_titulo'), 'filmes', ['titulo'], unique=False)
    op.drop_table('alembic_version_usuario')
    op.drop_index(op.f('ix_tb_usuarios_id'), table_name='tb_usuarios')
    op.drop_table('tb_usuarios')
    op.drop_index(op.f('ix_alugueis_id'), table_name='alugueis')
    op.drop_table('alugueis')
    op.drop_table('alembic_version_alugueis')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alembic_version_alugueis',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_alugueis_pkc'))
    )
    op.create_table('alugueis',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filme_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_aluguel', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('data_prevista_devolucao', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('data_devolucao', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('valor_aluguel', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ATIVO', 'DEVOLVIDO', 'ATRASADO', name='aluguelstatus'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('alugueis_pkey'))
    )
    op.create_index(op.f('ix_alugueis_id'), 'alugueis', ['id'], unique=False)
    op.create_table('tb_usuarios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cpf', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('telefone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('data_nascimento', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'user', name='role_enum'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('tb_usuarios_pkey')),
    sa.UniqueConstraint('cpf', name=op.f('tb_usuarios_cpf_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('email', name=op.f('tb_usuarios_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_tb_usuarios_id'), 'tb_usuarios', ['id'], unique=False)
    op.create_table('alembic_version_usuario',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_usuario_pkc'))
    )
    op.drop_index(op.f('ix_filmes_titulo'), table_name='filmes')
    op.drop_index(op.f('ix_filmes_id'), table_name='filmes')
    op.drop_table('filmes')
    # ### end Alembic commands ###
